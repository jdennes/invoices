#!/usr/bin/env ruby
#encoding: utf-8
require "date"
require "fileutils"
require "pdfkit"

gen_date = DateTime.now
if ARGV.length == 1
  gen_date = DateTime.parse ARGV[0]
end
# Find the last day in the month for the date the invoice is being generated
last = DateTime.civil gen_date.year, gen_date.month, -1

# Set the filename for the invoice's Markdown file
filename = File.join(Dir.pwd, "_posts", last.strftime("%Y-%m-%d-invoice.markdown"))

# Set the filename for the invoice's PDF file
pdfs_dir = File.join(Dir.pwd, "_posts", "_pdfs")
unless File.directory?(pdfs_dir)
  FileUtils.mkdir_p(pdfs_dir)
end
pdf_filename = File.join(pdfs_dir, last.strftime("%Y-%m-%d-invoice.pdf"))

monthly_data =
"---
layout:         post
title:          \"Invoice â€“ #{last.strftime('%B, %Y')}\"
date:           #{last.strftime('%Y-%m-%d 10:00:00')}
invoice_number: \"#{last.strftime('%Y%m-GITHUB')}\"
period:         \"#{last.strftime('%B, %Y')}\"
---
"

invoice_template = File.open(
  File.join(Dir.pwd, "invoice-template.md"), "r").read

# Glue the monthly data and the invoice template together, and save the invoice.
File.open(filename, "w") { |f| f.write(monthly_data + invoice_template) }

# Build the site
system "bundle exec jekyll build --safe"

# Generate a PDF from the generate HTML
generated_filename = File.join(
  Dir.pwd, "_site",
  filename.split("/").last.gsub("-", "/").gsub("markdown", "html"))
stylesheet = File.join(Dir.pwd, "_site", "css", "main.css")

html = File.read generated_filename
kit = PDFKit.new html, :page_size => "A4"
kit.stylesheets << stylesheet
kit.to_file pdf_filename

p "Generated your monthly invoice."
p "Markdown file saved to: #{filename}"
p "PDF file saved to:      #{pdf_filename}"
